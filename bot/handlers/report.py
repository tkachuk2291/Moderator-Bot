from datetime import datetime

import aiohttp
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from ..config import settings

# Simple in-memory cooldown state
last_report_time = {}


report_router = Router()


@report_router.message(Command("report"))
async def report_user(message: Message):
    args = message.text.split()
    if len(args) < 2:
        await message.reply("<b>‚ùó –í–∫–∞–∂—ñ—Ç—å –ø—Ä–∏—á–∏–Ω—É: /report <–ø—Ä–∏—á–∏–Ω–∞></b>")
        return
    reporter = message.from_user
    reporter_id = str(reporter.id)
    now = datetime.now()
    if reporter_id in last_report_time:
        time_diff = (now - last_report_time[reporter_id]).total_seconds()
        if time_diff < 180:
            await message.reply("<b>‚è≥ –í–∏ –∑–º–æ–∂–µ—Ç–µ –∑–Ω–æ–≤—É –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ 3 —Ö–≤–∏–ª–∏–Ω–∏.</b>")
            return
    last_report_time[reporter_id] = now
    reason = " ".join(args[1:])
    reported_user = message.reply_to_message.from_user if message.reply_to_message else None
    reporter_name = reporter.full_name
    if reported_user:
        reported_name = reported_user.full_name
        reported_id = reported_user.id
    else:
        reported_name = "‚ùì –ù–µ–≤—ñ–¥–æ–º–æ (–±–µ–∑ reply)"
        reported_id = "‚Äî"
    now_str = now.strftime("%d.%m.%Y %H:%M:%S")
    report_msg = (
        f"üö® **–ù–æ–≤–∏–π —Ä–µ–ø–æ—Ä—Ç!**\n"
        f"üë§ –í—ñ–¥: {reporter_name} (`{reporter_id}`)\n"
        f"üéØ –ù–∞: {reported_name} (`{reported_id}`)\n"
        f"üïí –ß–∞—Å: {now_str}\n"
        f"üìå –ü—Ä–∏—á–∏–Ω–∞: {reason}"
    )
    async with aiohttp.ClientSession() as session:
        await session.post(settings.DISCORD_WEBHOOK_URL, json={"content": report_msg})
    await message.reply("<b>‚úÖ –í–∏ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏ —Ä–µ–ø–æ—Ä—Ç. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.</b>")

